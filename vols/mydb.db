from django.db import models
from django_mysql.models import DynamicField, Model
import datetime

class typeOffre(models.Model) :
  type = models.CharField(max_length=200)
  def __str__(self):
        return self.type

class client(models.Model) :
      nomComplet =  models.CharField(max_length=200)
      telephone =  models.CharField(max_length=200)
      email = models.CharField(max_length=200)
      adresse= models.CharField(max_length=200)
      dernierTicketAchete = models.datetime.datetime


class passager(models.Model) :
      nomComplet =  models.CharField(max_length=200)
      telephone =  models.CharField(max_length=200)
      email = models.CharField(max_length=200)
      genre = models.FixedField(max_length=200)
      typePassager  = models.CharField(max_length=200)
      numeroCarte= models.CharField(max_length=200)
      Pointage= models.IntegerField()
      estblackliste = models.Bit1BooleanField()


class compagnie(models.Model) :
      nomCompagnie =  models.CharField(max_length=200)
      def __str__(self):
        return self.nomCompagnie



class vol(models.Model) :
      type =  models.ForeignKey(typeOffre, on_delete=models.CASCADE)
      source =  models.CharField(max_length=200)
      achatInstantane = models.Bit1BooleanField()
      allerSimple = models.Bit1BooleanField()
      dernierAchat = models.datetime.datetime
      nombreSiegeReserve =  models.IntegerField()
      dateDepart  = models.datetime.datetime
      dateArrivee = models.datetime.datetime

    def __str__(self):
        return self.name

class volGenerique(models.Model) :
      compagnie =  models.CharField(max_length=200)
      heureDepart  = models.datetime.datetime
      heureArrivee = models.datetime.datetime
      capacite =  models.IntegerField()
      aeroportDepart =  models.CharField(max_length=200)
      aeroportArrivee =  models.CharField(max_length=200)

    def __str__(self):
        return self.name

class reservation(models.Model) :
      dateReservation =  models.datetime.datetime
      nomclient = models.ForeignKey(Client, on_delete=models.CASCADE)
      nomPassager = models.ForeignKey(Passager, on_delete=models.CASCADE)
      nomvol = models.ForeignKey(Vol, on_delete=models.CASCADE)
      prixReservation = models.IntegerField()
      devise = models.CharField(max_length=200)
      montantTotal = models.IntegerField()
      bagageInclus = models.Bit1BooleanField()

class Aeroport(models.Model) :
      nomAeroport = models.CharField(max_length=200)
      paysAeroport = models.ForeignKey(Ville, on_delete=models.CASCADE)

classe escale(models.Model) :
      lieuArret = models.ForeignKey(Aeroport, on_delete=models.CASCADE)
       def __str__(self):
        return self.lieuArret


class Ville(models.Model) :
      nomVille = models.CharField(max_length=200)
      pays= models.CharField(max_length=200)




      "itineraries": [
        {
          "duration": "PT9H20M",
          "segments": [
            {
              "departure": {
                "iataCode": "SYD",
                "terminal": "1",
                "at": "2020-08-01T10:00:00"
              },
              "arrival": {
                "iataCode": "BKK",
                "at": "2020-08-01T16:20:00"
              },
              "carrierCode": "TG",
              "number": "476",
              "aircraft": {
                "code": "747"
              },
              "operating": {
                "carrierCode": "TG"
              },
              "duration": "PT9H20M",
              "id": "1",
              "numberOfStops": 0,
              "blacklistedInEU": false
            }
          ]
        }
      ],


      "price": {
        "currency": "EUR",
        "total": "1590.78",
        "base": "1390.00",
        "fees": [
          {
            "amount": "0.00",
            "type": "SUPPLIER"
          }
        ],
        "grandTotal": "1590.7
